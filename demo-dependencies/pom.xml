<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>copyDemo</artifactId>
        <groupId>com.copy</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>demo-dependencies</artifactId>
    <packaging>pom</packaging>
    <name>${project.artifactId}</name>
    <description>统一对jar包进行管理</description>

    <!--jar包版本管理-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <spring-cloud-alibaba.version>2.1.1.RELEASE</spring-cloud-alibaba.version>
        <spring-cloud.version>Greenwich.SR4</spring-cloud.version>
        <spring-boot.version>2.1.13.RELEASE</spring-boot.version>
        <lombok-version>1.18.8</lombok-version>
        <mybatis-plus.version>3.3.1</mybatis-plus.version>
        <knife4j.version>2.0.2</knife4j.version>
        <poi-tl.version>1.6.0</poi-tl.version>
        <elasticsearch.version>7.5.2</elasticsearch.version>
        <guava.version>20.0</guava.version>
        <mybatis-generator.version>1.3.7</mybatis-generator.version>
        <commons-text.version>1.6</commons-text.version>
        <commons-compress.version>1.20</commons-compress.version>
    </properties>

    <!--指定远程仓库地址-->
    <repositories>
<!--        <repository>-->
<!--            <id>meitq-nexus</id>-->
<!--            <url>http://192.168.1.122:40231/nexus/content/groups/public/</url>-->
<!--            <releases>-->
<!--                <enabled>true</enabled>-->
<!--            </releases>-->
<!--            <snapshots>-->
<!--                <enabled>false</enabled>-->
<!--            </snapshots>-->
<!--        </repository>-->
        <repository>
            <id>central</id>
            <name>aliyun maven</name>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <layout>default</layout>
            <!-- 是否开启发布版构件下载 -->
            <releases>
                <enabled>true</enabled>
            </releases>
            <!-- 是否开启快照版构件下载 -->
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

    </repositories>

    <!--插件远程仓库地址-->
    <pluginRepositories>
<!--        <pluginRepository>-->
<!--            <id>nexus</id>-->
<!--            <url>http://192.168.1.122:40231/nexus/content/groups/public/</url>-->
<!--            <releases>-->
<!--                <enabled>true</enabled>-->
<!--            </releases>-->
<!--            <snapshots>-->
<!--                <enabled>false</enabled>-->
<!--            </snapshots>-->
<!--        </pluginRepository>-->

        <pluginRepository>
            <id>nexus</id>
            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <!--所有子项目会依赖的jar
       compile :默认的范围,编译范围依赖在所有的classpath 中可用，同时它们也会被打包
       provided:依赖只有在当JDK 或者一个容器已提供该依赖之后才使用,依赖在编译classpath （不是运行时）可用。它们不是传递性的，也不会被打包
       runtime:在运行和测试系统的时候需要，但在编译的时候不需要
       test:在一般的编译和运行时都不需要，它们只有在测试编译和测试运行阶段可用
       system:system范围依赖与provided 类似，但是你必须显式的提供一个对于本地系统中JAR 文件的路径。这么做是为了允许基于本地对象编译，
            而这些对象是系统类库的一部分。这样的构件应该是一直可用的，Maven 也不会在仓库中去寻找它。如果你将一个依赖范围设置成系统范围，
            你必须同时提供一个 systemPath 元素。注意该范围是不推荐使用的（你应该一直尽量去从公共或定制的 Maven 仓库中引用依赖）
     -->
    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope> <!--编译时可用，不会被打包-->
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>compile</scope><!--所有的classpath 中可用，同时它们也会被打包,scope的默认值compile-->
        </dependency>

        <!--待研究-->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
    </dependencies>

    <!--版本管理,子项目不会默认依赖-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.copy</groupId>
                <artifactId>demo-core</artifactId>
                <version>1.0-SNAPSHOT</version>
            </dependency>
            <!-- spring-boot版本依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- spring-cloud-alibaba版本依赖 -->
            <dependency>
                <groupId>com.alibaba.cloud</groupId>
                <artifactId>spring-cloud-alibaba-dependencies</artifactId>
                <version>${spring-cloud-alibaba.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- spring-cloud版本依赖 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- swagger增强文档版本依赖 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-dependencies</artifactId>
                <type>pom</type>
                <scope>import</scope>
                <version>${knife4j.version}</version>
            </dependency>

            <!-- mybatis-plus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-core</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <!--Word组件-->
            <dependency>
                <groupId>com.deepoove</groupId>
                <artifactId>poi-tl</artifactId>
                <version>${poi-tl.version}</version>
            </dependency>

            <!--elasticsearch 客户端-->
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>
            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${elasticsearch.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis-generator.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!--maven 插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <!-- mybatis代码生成插件 -->
            <!--            <plugin>-->
            <!--                <groupId>org.mybatis.generator</groupId>-->
            <!--                <artifactId>mybatis-generator-maven-plugin</artifactId>-->
            <!--                <version>1.3.7</version>-->
            <!--                <configuration>-->
            <!--                    &lt;!&ndash;配置文件的位置&ndash;&gt;-->
            <!--                    <configurationFile>src/main/resources/mybatis-generator-config.xml</configurationFile>-->
            <!--                    <verbose>true</verbose>-->
            <!--                    <overwrite>true</overwrite>-->
            <!--                </configuration>-->
            <!--                <dependencies>-->
            <!--                    <dependency>-->
            <!--                        <groupId>mysql</groupId>-->
            <!--                        <artifactId>mysql-connector-java</artifactId>-->
            <!--                        <version>8.0.16</version>-->
            <!--                    </dependency>-->
            <!--                    <dependency>-->
            <!--                        <groupId>com.meitq</groupId>-->
            <!--                        <artifactId>dy-core</artifactId>-->
            <!--                        <version>${project.version}</version>-->
            <!--                    </dependency>-->
            <!--                </dependencies>-->
            <!--            </plugin>-->
        </plugins>
    </build>

</project>